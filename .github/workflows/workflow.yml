name: workflow.yml

on:
  push:
    branches:
      - main

jobs:
  # Step 1: Database Migration
  migrate-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Flyway migrations on Staging DB
        env:
          DB_HOST: ${{ vars.STAGING_DB_HOST }}
          DB_PORT: ${{ vars.STAGING_DB_PORT }}
          DB_NAME: ${{ vars.STAGING_DB_NAME }}
          DB_USER: ${{ vars.STAGING_DB_USER }}
          DB_PASSWORD: ${{ vars.STAGING_DB_PASSWORD }}
        run: |
          docker run --rm \
            -v $(pwd)/db/migrations:/flyway/sql \
            flyway/flyway:latest \
            -url=jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME} \
            -user=${DB_USER} -password=${DB_PASSWORD} \
            -baselineOnMigrate=true \
            migrate

  
  build:
    needs: migrate-database  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/calculator:$GITHUB_SHA -f Calculator/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/calculator:$GITHUB_SHA
  
  
  # Step 3: Deploy to server
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Save SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key

      - name: Deploy Docker container to server
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/calculator:$GITHUB_SHA
            docker stop calculator || true
            docker rm calculator || true
            docker run -d --name calculator -p 80:80 ${{ secrets.DOCKER_USERNAME }}/calculator:$GITHUB_SHA
            echo "✅ Deployment completed successfully!"
          EOF

  # Step 4: Load Testing with K6
  load_test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install K6 (via official K6 repository)
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg software-properties-common
          sudo wget -q -O - https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Run K6 Load Test
        run: k6 run Tests/tests/k6-test.js

  # Step 5: E2E Testing with TestCafé
  e2e_test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Firefox + dependencies
        run: |
          sudo apt update
          sudo apt install -y firefox
          sudo apt install -y libx11-xcb1 libdbus-glib-1-2 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb-dev libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6 x11-utils xvfb

      - name: Install TestCafé
        run: npm install -g testcafe

      - name: Run E2E tests with Firefox in headless mode using Xvfb
        run: |
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99
          testcafe firefox:headless Tests/tests/e2e-test.js --browser-init-timeout 60000
  